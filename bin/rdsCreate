#!/bin/bash

function help {
  echo "Creates a database server."
  echo "This operation takes several minutes, during which time the database is not available."
  echo -e "\nUsage: $(basename $0) [options] instanceId classFQ dbName engine storage\n"
  echo "Options are:"
  echo "  -d         Dry run - show command that would be executed"
  echo "  -i int     IOPS; value must be at least 1000 if specified"
  echo "  -P int     Port"
  echo "  -p string  Master database user password, set to blahblah if not specified"
  echo "  -r int     The number of days automated backups are retained"
  echo "  -u string  Master database user name, set to master if not specified"
  echo "  -q         Quiet mode; suppress all output"
  echo "  -x         Debug mode"
  echo "  -z string  Availability Zone; examples: us-east-1a, us-east-1b, us-west, set to us-east-1c if not specified"
  echo -e "\nAnd:\n"
  echo "  instanceId is the name by which you wish to refer to the new DB server"
  echo "  classFQ is one of: micro, small, medium, large, xlarge, xxlarge, xxxlarge, 4xlarge, 8xlarge"
  echo "  dbName is the name of the database to be managed by the new server"
  echo "  engine is one of: MySQL, postgres, oracle-se1, oracle-se, oracle-ee, sqlserver-ee, sqlserver-se, sqlserver-ex, sqlserver-web"
  echo "  storage to be allocated, in GB"
  #echo "  engineVersion is left out"
  exit -1
}

function classFQ {
  case $1 in
    micro)    echo db.t1.micro    ;;
    small)    echo db.m1.small    ;;
    medium)   echo db.m1.medium   ;;
    large)    echo db.m1.large    ;;
    xlarge)   echo db.m1.xlarge   ;;
    xxlarge)  echo db.m2.xlarge   ;;
    xxxlarge) echo db.m2.2xlarge  ;;
    4xlarge)  echo db.m2.4xlarge  ;;
    8xlarge)  echo db.cr1.8xlarge ;;
  esac
}

if [ $# -lt 6 ]; then help; fi

ACCESSIBILITY="-pub true"
AZ="-z us-east-1c"
OUTPUT="--show-xml"
PASSWORD="-p blahblah"
SHOW_URL="--show-request"
USER="-u master"

while getopts ":P:dxi:p:qr:u:z:h?" opt; do
  case $opt in
    P) PORT="--port $OPTARG"    ;;
    d) DRY=true                 ;;
    i) IOPS="--iops $OPTARG"    ;;
    p) PASSWORD="-p $OPTARG"    ;;
    q) QUIET=true               ;;
    r) BACKUPS="-r $OPTARG"     ;;
    u) USER="-u $OPTARG"        ;;
    x) DEBUG=true               ;;
    z) AZ="-z $OPTARG"          ;;
    *) help                     ;;
  esac
done
shift $(($OPTIND-1))

CLASS_FQ="--db-instance-class $(classFQ $2)"
CMD="rds-create-db-instance $1 $CLASS_FQ -n $3 -e $4 -s $5"
CMD="$CMD $PORT $USER $PASSWORD $IOPS $BACKUPS $AZ $ACCESSIBILITY $OUTPUT $QUIET $SHOW_URL"
if [ "$DRY" ]; then
  echo "$CMD"
else
  if [ "$DEBUG" ]; then set -xv; fi
  echo "$($CMD)"
fi
